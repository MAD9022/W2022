(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{531:function(t,a,e){"use strict";e.r(a);var s=e(38),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("PageHeader"),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[t._v("Welcome to MAD9022. This course has changed many times over the years to become its current incarnation. With the current version, our topics will include:")]),t._v(" "),e("ul",[e("li",[t._v("Ways to organize your code for modern web applications")]),t._v(" "),e("li",[t._v("Intermediate level JavaScript")]),t._v(" "),e("li",[t._v("More HTML5 APIs")]),t._v(" "),e("li",[t._v("Approaches to data storage and caching")]),t._v(" "),e("li",[t._v("How to build installable, offline capable, "),e("code",[t._v("Progressive Web Apps")])]),t._v(" "),e("li",[t._v("How to create cross-platform Mobile Apps using the "),e("code",[t._v("Dart")]),t._v(" programming language and the "),e("code",[t._v("Flutter")]),t._v(" framework.")])]),t._v(" "),e("h2",{attrs:{id:"data-file-formats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-file-formats"}},[t._v("#")]),t._v(" Data File Formats")]),t._v(" "),e("p",[t._v("Data can be stored in many different types of text file formats. "),e("code",[t._v("json")]),t._v(", "),e("code",[t._v("xml")]),t._v(", "),e("code",[t._v("csv")]),t._v(", "),e("code",[t._v("tsv")]),t._v(", "),e("code",[t._v("yaml")]),t._v(", "),e("code",[t._v("txt")]),t._v(", and even "),e("code",[t._v("html")]),t._v(". These are all text files, meaning that you can open then with any text editor and make direct changes to the text data inside them.")]),t._v(" "),e("p",[t._v("Moving beyond just text files there are lots of ways to store and save data that require some other specialized software. Databases are a common example of this. Databases save your information in binary files that are organized and compressed in efficient ways. Each brand of database - "),e("code",[t._v("MySQL")]),t._v(", "),e("code",[t._v("SQL Server")]),t._v(", "),e("code",[t._v("IndexedDB")]),t._v(", "),e("code",[t._v("MongoDB")]),t._v(", etc. has its own file format and approach to saving the information. They all save their information in files but not files that you can open and read in a text editor.")]),t._v(" "),e("p",[t._v("As web developers we need to be comfortable working with data that is coming from a variety of formats. For client-side web development we need to be able to use JavaScript to work with "),e("code",[t._v("json")]),t._v(", "),e("code",[t._v("xml")]),t._v(" and "),e("code",[t._v("html")]),t._v(" text files. "),e("code",[t._v("yaml")]),t._v(" files are also commonly used for web development. On the client side the only database that is embedded in the browser is "),e("code",[t._v("IndexedDB")]),t._v(". Other databases are typically accessed from the web server. We will use HTTP Requests to upload and download data from the server. A server-side script is used to access the database and complete the "),e("code",[t._v("CRUD")]),t._v(" (Create, Read, Update, Delete) operations.")]),t._v(" "),e("p",[t._v("There are some solutions, like "),e("code",[t._v("Firebase Firestore")]),t._v(" which allow us to talk to a server-side database from our client-side JavaScript. However, we are still really just using JavaScript to make HTTP Requests to a script running on the server that accesses the "),e("code",[t._v("Firestore")]),t._v(" database and runs the "),e("code",[t._v("CRUD")]),t._v(" operations.")]),t._v(" "),e("h3",{attrs:{id:"json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[t._v("#")]),t._v(" JSON")]),t._v(" "),e("p",[e("code",[t._v("JSON")]),t._v(" - JavaScript Object Notation is the most popular format for sending data between clients and servers. It is called JSON because it uses a JavaScript-compatible syntax for encoding the information inside the file.")]),t._v(" "),e("p",[t._v("However, it is "),e("strong",[t._v("NOT")]),t._v(" JavaScript. It is just a text file with a single long string. For this exact reason, we cannot save things like functions or DOM elements inside of JSON files. We can only save "),e("code",[t._v("String")]),t._v(", "),e("code",[t._v("Number")]),t._v(", "),e("code",[t._v("Boolean")]),t._v(", and "),e("code",[t._v("null")]),t._v(" ("),e("code",[t._v("Primitive")]),t._v(" values) plus "),e("code",[t._v("Array")]),t._v(" literals and "),e("code",[t._v("Object")]),t._v(" literals.")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("JSON")]),t._v(" file format is used by "),e("code",[t._v("localStorage")]),t._v(" and "),e("code",[t._v("sessionStorage")]),t._v(" to hold data in the browser. More on this next week.")]),t._v(" "),e("p",[t._v("The primary differences between a JS object and a JSON object are:")]),t._v(" "),e("ul",[e("li",[t._v("All object keys must be wrapped in double quotes.")]),t._v(" "),e("li",[t._v("All string values must be wrapped in double quotes.")]),t._v(" "),e("li",[t._v("No trailing commas are allowed after array or object values.")]),t._v(" "),e("li",[t._v("No comments are allowed in the file.")])]),t._v(" "),e("p",[t._v("Here is a JavaScript Object:")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joanne'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  active"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  courses"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HRT100'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HRT200'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HRT300'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("and here is the same information as JSON:")]),t._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Joanne"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"active"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"courses"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HRT100"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HRT200"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HRT300"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("Notice all the double quotes around all the string values. No quotes around the number or boolean values.")]),t._v(" "),e("h3",{attrs:{id:"xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xml"}},[t._v("#")]),t._v(" XML")]),t._v(" "),e("p",[e("code",[t._v("XML")]),t._v(" - eXtensible Markup Language, created in 1998, was the first file format that was used for client-side web development for the transfer of data between clients and servers. As the name suggests, it is a MarkUp language. Angle brackets "),e("code",[t._v("< >")]),t._v(" are used to wrap the tag names which are used to label and describe the information in the file.")]),t._v(" "),e("p",[t._v("The most important rule for writing "),e("code",[t._v("XML")]),t._v(" files is "),e("strong",[t._v("Human Readable")]),t._v(".")]),t._v(" "),e("p",[t._v("This one rule meant that "),e("code",[t._v("XML")]),t._v(" rapidly became a very popular format with the thousands of new developers who started working in web development in the late 90s and early 2000s. The format was adopted by nearly all major software providers and is still widely used today.")]),t._v(" "),e("p",[t._v("An example of the widespread support for XML was the Microsoft adoption of it as a wrapper for all their MS Office files in Office 2007. With this release file formats changed from "),e("code",[t._v(".doc")]),t._v(" to "),e("code",[t._v(".docx")]),t._v(" and "),e("code",[t._v(".xls")]),t._v(" to "),e("code",[t._v(".xslx")]),t._v(" and so on. The name change reflected that XML had become a core part of the file format. A "),e("code",[t._v(".docx")]),t._v(" file is really just a "),e("code",[t._v(".doc")]),t._v(" file, wrapped inside of an XML file and then zipped. All the new features for MS Word have been added via the XML portion of the file.")]),t._v(" "),e("p",[e("code",[t._v("JSON")]),t._v(" overtook XML as the most popular web development format during the last decade because it was "),e("strong",[t._v("Developer Readable")]),t._v(" and because the file size was noticeably smaller than "),e("code",[t._v("XML")]),t._v(".")]),t._v(" "),e("p",[t._v("Here is the same data as above, as an XML file.")]),t._v(" "),e("div",{staticClass:"language-xml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("?xml")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("version")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1.0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("encoding")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://com.algonquincollege/student"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("student")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Joanne"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("123"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("active")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("true"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("active")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("courses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HRT100"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HRT200"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("HRT300"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("course")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("courses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("student")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[t._v("You can see how much more typing is required to output that small amount of information.")]),t._v(" "),e("h3",{attrs:{id:"yaml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" YAML")]),t._v(" "),e("p",[e("code",[t._v("YAML")]),t._v(" - YAML Ain't Markup Language is another simple text format for data. "),e("a",{attrs:{href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("yaml website"),e("OutboundLink")],1),t._v(" It is primarily used as a way to save settings for other applications. It uses carriage returns and tabbed spaces to indicate grouping and structure in the file instead of "),e("code",[t._v("{}")]),t._v(", "),e("code",[t._v("[]")]),t._v(", or "),e("code",[t._v("< >")]),t._v(".")]),t._v(" "),e("p",[t._v("Here is a quick 3 minute video about YAML file format.")]),t._v(" "),e("YouTube",{attrs:{title:"The Basics of YAML in Under 5 minutes",url:"https://youtube.com/embed/0fbnyS_lHW4"}}),t._v(" "),e("p",[t._v("All three of these formats have native support across many, many programming languages.")]),t._v(" "),e("h3",{attrs:{id:"other-formats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#other-formats"}},[t._v("#")]),t._v(" Other Formats")]),t._v(" "),e("p",[e("code",[t._v("csv")]),t._v(" stands for Comma separated values. These are files that save data in columns and rows just like a spreadsheet. Each end of line | carriage return is the end of a row. Each of the values in a row is separated by a comma, to create the columns.")]),t._v(" "),e("p",[e("code",[t._v("tsv")]),t._v(" stands for Tab Separated values. These files are very similar to the CSV files in the way that the information is saved in rows and columns. The primary difference between "),e("code",[t._v("csv")]),t._v(" and "),e("code",[t._v("tsv")]),t._v(" is that the tab separated value files use the tab character instead of a comma to create the columns.")]),t._v(" "),e("p",[e("code",[t._v("fixed-width")]),t._v(" files are closely related to the "),e("code",[t._v("tsv")]),t._v(" files. They have rows of entries. Each entry (column) has a fixed number of characters allowed. Space characters are used to pad the data within the available spaces. Visually very much like the "),e("code",[t._v("tsv")]),t._v(" files.")]),t._v(" "),e("p",[e("code",[t._v("txt")]),t._v(" text files are the most basic version of the data files. It is up to the developer to decide how they want to arrange the data inside these files. This type and the others listed so far are often called flat-file databases.")]),t._v(" "),e("p",[e("code",[t._v("html")]),t._v(" HyperText Markup Language files are very familiar to web developers. While you may not think of it as a data format file, they do contain all the text information for a webpage. The attributes in the HTML elements can be used to store extra non-visual information. This approach is actually so common that "),e("code",[t._v("dataset")]),t._v(" properties were officially added to the HTML specification. Any attribute name that starts with "),e("code",[t._v("data-")]),t._v(" is one of the "),e("code",[t._v("dataset")]),t._v(" properties and it has special JS methods for reading and writing these values.")]),t._v(" "),e("h2",{attrs:{id:"what-to-do-this-week"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-to-do-this-week"}},[t._v("#")]),t._v(" What to do this week")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("TODO")]),t._v(" "),e("p",[t._v("Things to do before next week.")]),t._v(" "),e("ul",[e("li",[t._v("Read all the content from "),e("code",[t._v("Modules 1.1, 1.2, and 2.1")]),t._v(".")]),t._v(" "),e("li",[t._v("Prepare questions to ask in class.")])])])],1)}),[],!1,null,null,null);a.default=n.exports}}]);