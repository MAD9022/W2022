(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{488:function(e,t,a){e.exports=a.p+"assets/img/github-pages-screenshot.644d31f3.png"},543:function(e,t,a){"use strict";a.r(t);var s=a(38),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("PageHeader"),e._v(" "),s("h2",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[e._v("#")]),e._v(" Git")]),e._v(" "),s("p",[e._v("We will be using "),s("code",[e._v("Git")]),e._v(" to manage all our web projects and many of our mobile projects so it is important that everyone be comfortable with how to use "),s("code",[e._v("Git")]),e._v(".")]),e._v(" "),s("p",[e._v("To create a new project:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" init\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("To save the remote address of the Github (or other server) version of the repo:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" origin https://www.github.com/"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("reponame"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("code",[e._v("origin")]),e._v(" is the name that will be used to refer to the remote server. Your local repo can have a number of remote locations. Each one will have a unique name. "),s("code",[e._v("origin")]),e._v(" is the standard convention for the primary remote location.")]),e._v(" "),s("p",[e._v("Every time you make changes to your code and you save a new version of your code you should record the changes in your repo.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"message with details about the changes just made"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("To upload the latest commit(s) that you have made to the local repo:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push origin main\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("If your remote repo is getting updated from more than one computer then you should always download the latest version of the repo before you start working.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull origin main\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("If it is the very first time you are loading a repo on to your computer then instead of "),s("code",[e._v("pull")]),e._v(" we will use the "),s("code",[e._v("clone")]),e._v(" command.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone git@github.com:"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("username"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("reponame"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("The period at the end means to load the repo into the current folder. If you omit the period then the clone command will create a folder with the name of the repo and download the repo into the newly created folder.")]),e._v(" "),s("p",[s("code",[e._v("origin")]),e._v(" is the name of the remote repository and "),s("code",[e._v("main")]),e._v(" is the name of the branch you are uploading to.\nTo create and switch to a new branch:")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("branchName"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("You can choose any name you want to use for the new branch. It is common practice to create a new branch for a repo when you are adding a new feature and the feature is still under development. When the code for the feature is ready then we can merge it back into the "),s("code",[e._v("main")]),e._v(" branch.")]),e._v(" "),s("p",[e._v("If you were going to add a new feature "),s("strong",[e._v("darkmode")]),e._v(" to a repo and then merge it back into the "),s("code",[e._v("main")]),e._v(" branch.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b darkmode\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("We are now working in the "),s("code",[e._v("darkmode")]),e._v(" branch.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" -A\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"finished building the darkmode feature"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("Changes that were made have been saved and committed to the "),s("code",[e._v("darkmode")]),e._v(" branch. We can now push the changes up to Github where they can be merged with a pull request.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" push origin darkmode\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("Github will now have a "),s("code",[e._v("darkmode")]),e._v(" branch. On Github you can go to the "),s("code",[e._v("Pull Request")]),e._v(" tab, find the commit that you just uploaded and click on the "),s("code",[e._v("pull request")]),e._v(" button to initiate the merge process of the "),s("code",[e._v("darkmode")]),e._v(" branch into the "),s("code",[e._v("main")]),e._v(" branch.")]),e._v(" "),s("p",[e._v("After the merge is complete we will download the latest version of the main branch.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout main\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" pull origin main\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("And then to delete your local copy of the "),s("code",[e._v("darkmode")]),e._v(" branch you would use the "),s("code",[e._v("branch")]),e._v(" command with the "),s("code",[e._v("-d")]),e._v(" flag to name the branch you want to delete.")]),e._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" branch -d darkmode\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[e._v("#")]),e._v(" Github")]),e._v(" "),s("p",[e._v("Github is the external server where we save and share copies of our repositories. It can also be the source for "),s("code",[e._v("CI")]),e._v(" - continuous integration and "),s("code",[e._v("CD")]),e._v(" - continuous delivery/deployment.")]),e._v(" "),s("p",[e._v("On the Github website, when you view the home page for your repo, the "),s("code",[e._v("Code")]),e._v(" tab will be the default one that is displayed. The "),s("code",[e._v("main")]),e._v(" branch is the default branch that is displayed. If there is a "),s("code",[e._v("README.md")]),e._v(" file it will be read as HTML and displayed.")]),e._v(" "),s("blockquote",[s("p",[e._v("Using the "),s("strong",[e._v("README.md")]),e._v(" file to display a welcome message as well as instructions on how to use the code is a best practice.")])]),e._v(" "),s("p",[e._v("To switch between branches, use the dropdown list from above the code list.")]),e._v(" "),s("p",[e._v("Two other tabs beside the "),s("code",[e._v("Code")]),e._v(" tab which are useful are "),s("code",[e._v("Issues")]),e._v(" and "),s("code",[e._v("Pull Requests")]),e._v(". The issues area is where you and other people can report and track errors and issues in your project. The pull requests section is the area that we use to manage the process of approving and merging updates to the project through alternate feature branches.")]),e._v(" "),s("h3",{attrs:{id:"pull-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull-requests"}},[e._v("#")]),e._v(" Pull Requests")]),e._v(" "),s("p",[e._v("Pull Requests are the intended best practice for how to manage your repo and project on Github.")]),e._v(" "),s("p",[s("code",[e._v("Git")]),e._v(" has a "),s("code",[e._v("merge")]),e._v(" command that lets you try to directly merge code from one branch into another. Pull Requests are intended as a sanity check on this process. Let's say that you are the owner of a repository and you want to make your project into a open-source project. You can make your repo into a "),s("code",[e._v("public")]),e._v(" one so that everyone can read it.")]),e._v(" "),s("p",[e._v("However, you don't want to let just anyone push any code that they want to the "),s("code",[e._v("main")]),e._v(" branch.")]),e._v(" "),s("p",[e._v("So, people need to make a "),s("code",[e._v("feature")]),e._v(" branch as a copy of "),s("code",[e._v("main")]),e._v(". They do their work in that branch and then push that branch up to repo. Now, all the code is on Github but the new code is isolated in that feature branch.")]),e._v(" "),s("p",[e._v("You do want other people to contribute to the project but the code needs to be reviewed before adding it to "),s("code",[e._v("main")]),e._v(".")]),e._v(" "),s("p",[e._v("You can go to the "),s("code",[e._v("Settings > Branches")]),e._v(" area of your repository and set "),s("code",[e._v("main")]),e._v(" as a protected branch by adding a "),s("code",[e._v("Branch Protection Rule")]),e._v(". Click the "),s("code",[e._v("Add rule")]),e._v(" button, enter the name "),s("code",[e._v("main")]),e._v(" as the pattern to match and then check the "),s("code",[e._v("Require a pull request before merging")]),e._v(" checkbox and the "),s("code",[e._v("Require approvals")]),e._v(" checkbox. Then click the "),s("code",[e._v("Save Changes")]),e._v(" button.")]),e._v(" "),s("p",[e._v("Now other users cannot push things to the "),s("code",[e._v("main")]),e._v(" branch and they must do a pull request that gets your approval before the code is merged into the main branch. IF there is an issue with the merge then the repo owner gets to decide how to handle the merge conflicts OR they can just reject the pull request with a message to the contributor.")]),e._v(" "),s("p",[e._v("In our "),s("RouterLink",{attrs:{to:"/assignments/exer/#2._Pull_Requests"}},[e._v("pull request exercise")]),e._v(" your instructor has already set up a repo that has a protected "),s("code",[e._v("main")]),e._v(" branch. This will force you to do your work through a feature branch that you push to the repo and then make a pull request.")],1),e._v(" "),s("h2",{attrs:{id:"github-pages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[e._v("#")]),e._v(" Github Pages")]),e._v(" "),s("p",[e._v("Github comes with a built-in solution for hosting static websites. A static website is one that does not need any server-side processing or dynamic rendering of content.")]),e._v(" "),s("p",[e._v("To activate the "),s("code",[e._v("github pages")]),e._v(" feature your repo either has to be set to public OR your account needs to be a PRO account or an approved Educational one.")]),e._v(" "),s("p",[e._v("If you go to the "),s("code",[e._v("Settings")]),e._v(" tab and select "),s("code",[e._v("Pages")]),e._v(" from the left hand menu, you will see the option to enable Github pages.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(488),alt:"github pages screenshot"}})]),e._v(" "),s("p",[e._v("There is a dropdown list to let you pick the branch that you want to use as the deployment branch for github pages. If you create a branch called "),s("code",[e._v("gh-pages")]),e._v(" then that branch will be used by default.")]),e._v(" "),s("p",[e._v("There is also an option to pick either the root folder or a "),s("code",[e._v("docs")]),e._v(" folder as the source for the github pages deployment.")]),e._v(" "),s("p",[e._v("The URL for your github pages website is similar to your repo URL. If your repo URL is "),s("code",[e._v("https://www.github.com/myusername/myrepo")]),e._v(" then your github website is "),s("code",[e._v("https://myusername.github.io/myrepo/")]),e._v(".")]),e._v(" "),s("p",[e._v("The username becomes the value for the subdomain and the domain "),s("code",[e._v("github.com")]),e._v(" becomes "),s("code",[e._v("github.io")]),e._v(".")]),e._v(" "),s("p",[e._v("It can take a few minutes for it to appear or to get updated depending on the time of day that you are using it.")]),e._v(" "),s("h2",{attrs:{id:"netlify"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netlify"}},[e._v("#")]),e._v(" Netlify")]),e._v(" "),s("p",[e._v("Netlify is a hosting service that includes a place to store server-side functions and can also be configured to watch a Github repo for updates. When the Github repo gets updated, Netlify will automatically fetch the latest code from the repo, run any configured build scripts that have been set up, and update the hosted website.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("Watch for Later")]),e._v(" "),s("p",[e._v("You will be using Netlify as part of your Hybrid Project later this semester.")])]),e._v(" "),s("p",[e._v("Watch to learn about Netlify Fundamentals")]),e._v(" "),s("YouTube",{attrs:{title:"Netlify Fundamentals",url:"https://www.youtube.com/embed/TSQAjWq49iw"}}),e._v(" "),s("p",[e._v("Watch to learn about how to connect Github and Netlify.")]),e._v(" "),s("YouTube",{attrs:{title:"Netlify and Github",url:"https://www.youtube.com/embed/ubg5imv2al8"}}),e._v(" "),s("p",[e._v("Watch to learn about Netlify Serverless functions.")]),e._v(" "),s("YouTube",{attrs:{title:"Serverless Functions on Netlify",url:"https://www.youtube.com/embed/a1AphvrtynU"}}),e._v(" "),s("h2",{attrs:{id:"what-to-do-this-week"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-to-do-this-week"}},[e._v("#")]),e._v(" What to do this week")]),e._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[e._v("TODO")]),e._v(" "),s("p",[e._v("Things to do before next week")]),e._v(" "),s("ul",[s("li",[e._v("Complete "),s("RouterLink",{attrs:{to:"/assignments/exer/"}},[e._v("Exercise 2: Pull Requests")])],1),e._v(" "),s("li",[e._v("Start working on "),s("RouterLink",{attrs:{to:"/assignments/hybrid/"}},[e._v("Hybrid Two")])],1),e._v(" "),s("li",[e._v("Read and Watch all the content for "),s("code",[e._v("3.1")]),e._v(", "),s("code",[e._v("3.2")]),e._v(", and "),s("code",[e._v("4.1")])]),e._v(" "),s("li",[e._v("Watch the 3 Netlify videos")])])])],1)}),[],!1,null,null,null);t.default=o.exports}}]);